<?xml version="1.0" encoding="utf-8"?>

<aiscript name="JP_SatelliteDropper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">

  <order id="JP_SatelliteDropper" name="SatelliteDropper JP" category="navigation" infinite="true">
    <params>
      <param name="ADD_ORDER_TAG" text="{8888888, 1030}" comment="Add order tag?" type="bool" default="true"/>
      <param name="ENEMY_SECTORS" text="{8888888, 1031}" comment="Enemy sectors?" type="bool" default="false"/>
      <param name="MK2_INSTEAD" text="{8888888, 1032}" comment="Advanced satellites?" type="bool" default="false"/>
      <param name="RESTOCK_SATELLITES" text="{8888888, 1033}" comment="Restock satellites?" type="bool" default="true"/>
      <param name="RESTOCK_AMOUNT" text="{8888888, 1034}" comment="Restock amount?" type="number" default="1">
        <input_param name="min" value="1"/>
        <input_param name="max" value="this.ship.ammostorage.deployable.capacity"/>
        <input_param name="step" value="1"/>
        <input_param name="startvalue" value="1"/>
      </param>
      <!-- DEBUG -->
      <param name="DEBUG" text="DebugText" type="number" default="0.0" advanced="1">
        <input_param name="min" value="0.0"/>
        <input_param name="max" value="1.0"/>
        <input_param name="step" value="0.1"/>
      </param>
    </params>
    <skill min="0"/>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
    </requires>
  </order>

  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="TargetInvalidHandler"/>
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler"/>
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler"/>
    <handler ref="JobRemoveRequestHandler"/>
  </interrupts>

  <init>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="$DebugDirectory" exact="'JP_SatelliteDropper.logs'"/>
    <set_value name="$DebugFileName" exact="this.ship.idcode + '.JP_SatelliteDropper.log'"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="this.$OldName" exact="this.ship.name"/>
    <set_value name="$Ship" exact="this.ship"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <do_if value="$ADD_ORDER_TAG">
      <set_object_name object="this.ship" name="this.ship.name + '\033#FF00CC66# #SD\033X'"/>
    </do_if>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  </init>

  <attention min="unknown">
    <actions>

      <wait exact="1ms"/>
      <label name="INIT"/>
      <cancel_all_orders object="this.ship"/>

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file append="false" directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_SatelliteDropper.xml ~ Started ~~' + '\n'"/>
      </do_if>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <label name="RESUME"/>

      <!-- Resupply satellites -->
      <do_if value="$RESTOCK_SATELLITES">
        <do_if value="$RESTOCK_AMOUNT gt $Ship.ammostorage.{ware.satellite_mk1}.free">
          <set_value name="$RESTOCK_AMOUNT" exact="$Ship.ammostorage.{ware.satellite_mk1}.free"/>
        </do_if>
        <do_if value="$Ship.ammostorage.{if $MK2_INSTEAD then ware.satellite_mk2.objectmacro else ware.satellite_mk1.objectmacro}.count == 0">
          <set_value name="$AmmoTable" exact="table[]"/>
          <set_value name="$AmmoTable.{if $MK2_INSTEAD then ware.satellite_mk2 else ware.satellite_mk1}" exact="$RESTOCK_AMOUNT"/>
          <!-- Find a station where we can restock our ship -->
          <find_station name="$Stations" space="player.galaxy" multiple="true">
            <match checkoperational="true"/>
            <match mayattack="$Ship" negate="true"/>
            <match cansupplyclass="$Ship.class"/>
            <match knownto="$Ship.owner"/>
          </find_station>
          <do_if value="@$Stations.count gt 1">
            <sort_list list="$Stations" sortbyvalue="$Ship.distanceto.{loop.element}"/>
          </do_if>
          <do_if value="@$Stations.count gt 0">
            <set_value name="$RestockPrice" exact="0Cr"/>
            <set_value name="$RestockPrice" operation="add" exact="$Stations.{1}.buyprice.{ware.satellite_mk1} * $RESTOCK_AMOUNT"/>
            <add_build_to_modify_ship buildobject="$Ship" object="$Stations.{1}" ammo="$AmmoTable" price="$RestockPrice"/>
            <transfer_money from="$Ship.owner" to="$Stations.{1}" amount="$RestockPrice"/>
            <write_to_logbook title="'MoneyTransfer'" text="'Ship ' + $Ship.name + ' bought ' + $RESTOCK_AMOUNT + ' satellites.'" category="upkeep" money="-($RestockPrice)"/>
          </do_if>
          <do_else>
            <show_help custom="'Ship ' + $Ship.knownname + ' failed to resupply satellites.'" log="true"/>
            <remove_value name="$Stations"/>
            <remove_value name="$AmmoTable"/>
            <resume label="END"/>
          </do_else>
          <remove_value name="$Stations"/>
          <remove_value name="$AmmoTable"/>
        </do_if>
      </do_if>
      <do_else>
        <show_help custom="'Ship ' + $Ship.knownname + ' has no satellites and automatic restocking turned off.. canceling order.'" log="true"/>
        <resume label="END"/>
      </do_else>

      <!-- Get nearest Sector with an Gate without a satellite -->
      <find_gate space="player.galaxy" name="$Gates" multiple="true">
        <match knownto="$Ship.owner"/>
      </find_gate>
      <do_if value="not $ENEMY_SECTORS">
        <create_list name="$GatesToRemove"/>
        <do_for_each name="$Gate" in="$Gates">
          <do_if value="$Gate.sector.owner.mayattack.{$Ship}">
            <append_to_list name="$GatesToRemove" exact="$Gate"/>
          </do_if>
        </do_for_each>
        <remove_from_list name="$Gates" list="$GatesToRemove"/>
      </do_if>
      <create_list name="$GatesWithoutSatellite"/>
      <do_for_each name="$Gate" in="$Gates">
        <find_object space="$Gate.zone" name="$Satellite">
          <match owner="$Ship.owner"/>
        </find_object>
        <do_if value="@$Satellite == null">
          <append_to_list name="$GatesWithoutSatellite" exact="$Gate"/>
        </do_if>
        <remove_value name="$Satellite"/>
      </do_for_each>
      <do_if value="$GatesWithoutSatellite.count gt 1">
        <sort_list list="$GatesWithoutSatellite" sortbyvalue="$Ship.gatedistance.{loop.element}"/>
      </do_if>
      <do_if value="$GatesWithoutSatellite.count gt 0">
        <set_value name="$NearestGate" exact="$GatesWithoutSatellite.{1}"/>
        <do_if value="$DEBUG gt 0.0">
          <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
          <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'$NearestGate: ' + $NearestGate.name + ' ~ ' + '$NearestGate.sector: ' + $NearestGate.sector.name + ' ~ ' + '$NearestGate.exit.sector: ' + $NearestGate.exit.sector.name"/>
          <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
        </do_if>
      </do_if>
      <do_else>
        <!-- No Gates without an placed satellite found -->
        <!-- TODO: IDLE_WAIT -->
      </do_else>
      <remove_value name="$GatesWithoutSatellite"/>

      <!-- Fly to the sector of the nearest gate -->
      <do_if value="$Ship.sector != $NearestGate.sector">
        <run_script name="'move.generic'">
          <param name="destination" value="$NearestGate.sector"/>
          <param name="endintargetzone" value="true"/>
          <param name="recallsubordinates" value="true"/>
        </run_script>
      </do_if>

      <!-- Fly to the gate -->
      <label name="MOVING"/>
      <set_command command="command.move" param="$NearestGate"/>
      <get_safe_pos result="$TempPosition" zone="$NearestGate.sector" object="$NearestGate" directionobject="$Ship" radius="$Ship.size" ignored="$Ship"/>
      <move_to object="$Ship" destination="$NearestGate.sector" finishonapproach="false" forceposition="true" travel="true">
        <position value="$TempPosition"/>
        <interrupt_after_time time="2s"/>
      </move_to>
      <do_if value="$Ship.distanceto.{$NearestGate} gt 10000m">
        <resume label="MOVING"/>
      </do_if>
      <remove_value name="$TempPosition"/>
      <stop_moving object="$Ship"/>
      <wait exact="2s"/>

      <!-- Place satellite -->
      <launch_satellite object="$Ship" macro="if $MK2_INSTEAD then ware.satellite_mk2.objectmacro else ware.satellite_mk1.objectmacro" name="$Satellite"/>
      <set_object_name object="$Satellite" name="'\033#FF00CC66#{20001, 701}\033X \033#FF00CCCC#~ ' + $NearestGate.sector.name + ' --> ' + $NearestGate.exit.sector.name + '\033X'"/>
      <remove_value name="$Satellite"/>

      <remove_value name="$NearestGate"/>

      <wait exact="1s"/>
      <resume label="RESUME"/>

      <label name="END"/>

      <do_if value="$ADD_ORDER_TAG">
        <set_object_name object="this.ship" name="this.$OldName"/>
      </do_if>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_SatelliteDropper.xml ~ Finished ~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>

      <label name="CLEANUP"/>
      <remove_value name="$Ship"/>
      <remove_value name="this.$OldName"/>
      <remove_value name="$DebugFileName"/>
      <remove_value name="$DebugDirectory"/>

      <set_order_syncpoint_reached order="this.ship.order"/>
      <cancel_order order="this.ship.order" />
      <label name="FINISH"/>
      <wait exact="1ms"/>

    </actions>
  </attention>

  <on_abort>
    <do_if value="$ADD_ORDER_TAG">
      <set_object_name object="this.ship" name="this.$OldName"/>
      <remove_value name="this.$OldName"/>
    </do_if>
  </on_abort>

</aiscript>