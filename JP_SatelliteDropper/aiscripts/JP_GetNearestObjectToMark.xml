<?xml version="1.0" encoding="utf-8"?>

<!--
<return>
  <retval name="NEAREST_OBJECT_TO_MARK" value="$NearestObjectToMark"/>
</return>
-->

<aiscript name="JP_GetNearestObjectToMark" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">

  <order id="JP_GetNearestObjectToMark" name="GetNearestObjectToMark JP" category="internal" infinite="false">
    <params>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="SATELLITE_MACRO" text="SatelliteMacro" type="internal" default="ware.satellite_mk1.objectmacro"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="OWN_SECTORS" text="OwnSectors" type="bool" default="false"/>
      <param name="ENEMY_SECTORS" text="EnemySectors" type="bool" default="false"/>
      <param name="NEUTRAL_SECTORS" text="NeutralSectors" type="bool" default="true"/>
      <param name="FRIENDLY_SECTORS" text="FriendlySectors" type="bool" default="true"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="GATES" text="Gates" type="bool" default="true"/>
      <param name="ACTIVE_GATES" text="ActiveGates" type="bool" default="true"/>
      <param name="INACTIVE_GATES" text="InactiveGates" type="bool" default="true"/>
      <param name="ACCELERATORS" text="Accelerators" type="bool" default="true"/>
      <param name="ACTIVE_ACCELERATORS" text="ActiveAccelerators" type="bool" default="true"/>
      <param name="INACTIVE_ACCELERATORS" text="InactiveAccelerators" type="bool" default="true"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="STATIONS" text="Stations" type="bool" default="true"/>
      <param name="WHARFS" text="Wharfs" type="bool" default="true"/>
      <param name="SHIPYARDS" text="Shipyards" type="bool" default="true"/>
      <param name="PIRATE_BASE" text="PirateBase" type="bool" default="false"/>
      <param name="EQUIPMENTDOCKS" text="Equipmentdocks" type="bool" default="true"/>
      <param name="TRADE_STATIONS" text="TradeStations" type="bool" default="false"/>
      <param name="DEFENCE_STATIONS" text="DefenceStations" type="bool" default="false"/>
      <param name="FACTION_HEADQUARTERS" text="FactionHeadquarters" type="bool" default="true"/>
      <param name="NON_SPECIAL_STATIONS" text="NonSpecialStations" type="bool" default="false"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <param name="OWN_STATIONS" text="OwnStations" type="bool" default="false"/>
      <param name="ENEMY_STATIONS" text="EnemyStations" type="bool" default="false"/>
      <param name="FRIENDLY_STATIONS" text="FriendlyStations" type="bool" default="true"/>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <!-- If not specified the script will search the galaxy for stations with no satellite near.. if not.. it simply searches in $SECTOR -->
      <param name="SECTOR" text="Sector" type="object" default="null">
        <input_param name="class" value="[class.sector]"/>
      </param>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <!-- DEBUG -->
      <param name="DEBUG" text="DebugText" type="number" default="0" advanced="true">
        <input_param name="min" value="0"/>
        <input_param name="max" value="100"/>
        <input_param name="step" value="100"/>
      </param>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    </params>
  </order>

  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="TargetInvalidHandler"/>
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler"/>
    <handler ref="JobRemoveRequestHandler" />
  </interrupts>

  <init>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="$DebugDirectory" exact="'JP_SatelliteDropper.logs'"/>
    <set_value name="$DebugFileName" exact="this.ship.idcode + '.JP_GetNearestObjectToMark.xml.log'"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="$Ship" exact="this.ship"/>
    <set_value name="$NearestObjectToMark" exact="'NoObjectWithoutSatellitesFound'"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  </init>

  <attention min="unknown">
    <actions>

      <wait exact="1ms"/>
      <label name="INIT_LBL"/>

      <do_if value="$DEBUG gt 0">
        <debug_to_file append="false" directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_GetNearestObjectToMark.xml ~ Started ~~' + '\n'"/>
      </do_if>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <set_command command="command.scan"/>
      <set_command_action commandaction="commandaction.calculating"/>

      <wait min="1000ms" max="2000ms" profile="bell"/>

      <label name="SEARCH_FOR_SECTORS_LBL"/>
      <do_if value="$SECTOR != null">
        <create_list name="$_Sectors"/>
        <append_to_list name="$_Sectors" exact="$SECTOR"/>
        <resume label="SEARCH_FOR_OBJECTS_WITHOUT_SATELLITES_LBL"/>
      </do_if>

      <create_list name="$_TempSectors"/>
      <find_sector name="$_TempSectors" space="player.galaxy" multiple="true">
        <match knownto="$Ship.owner"/>
      </find_sector>

      <include_interrupt_actions ref="GetBlacklistgroup"/>

      <create_list name="$_Sectors"/>
      <do_for_each name="$_Sector" in="$_TempSectors">
        <do_if value="$Ship.gatedistance.{$_Sector} lt 0">
          <continue/>
        </do_if>
        <do_if value="$_Sector.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{$Ship} or $_Sector.isblacklisted.{blacklisttype.objectactivity}.{$blacklistgroup}.{$Ship}">
          <continue/>
        </do_if>
        <do_if value="$_Sector.owner.mayattack.{$Ship} and not $ENEMY_SECTORS">
          <continue/>
        </do_if>
        <do_if value="$_Sector.owner == faction.ownerless and not $NEUTRAL_SECTORS">
          <continue/>
        </do_if>
        <do_if value="$_Sector.owner == faction.player and not $OWN_SECTORS">
          <continue/>
        </do_if>
        <do_if value="$_Sector.owner != faction.ownerless and $_Sector.owner != faction.player and not $_Sector.owner.mayattack.{$Ship} and not $FRIENDLY_SECTORS">
          <continue/>
        </do_if>
        <append_to_list name="$_Sectors" exact="$_Sector"/>
      </do_for_each>
      <remove_value name="$_TempSectors"/>

      <do_if value="$DEBUG gt 0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'$_Sectors.count: ' + $_Sectors.count"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <do_for_each name="$_Sector" in="$_Sectors">
          <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="' ~ ' + $_Sector.knownname + ' ~~ [' + $_Sector.owner.knownname + ']'"/>
        </do_for_each>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>

      <do_if value="$_Sectors.count gt 0">
        <do_if value="$_Sectors.count gt 1">
          <sort_list list="$_Sectors" sortbyvalue="$Ship.gatedistance.{loop.element}"/>
        </do_if>
      </do_if>
      <do_else>
        <resume label="FINISH_LBL"/>
      </do_else>

      <label name="SEARCH_FOR_OBJECTS_WITHOUT_SATELLITES_LBL"/>
      <do_for_each name="$_Sector" in="$_Sectors">

        <create_list name="$_Objects"/>

        <do_if value="$GATES">
          <do_if value="$ACTIVE_GATES">
            <find_gate name="$_Objects" space="$_Sector" multiple="true" append="true">
              <match knownto="$Ship.owner"/>
              <match accelerator="false"/>
              <match active="true"/>
            </find_gate>
          </do_if>
          <do_if value="$INACTIVE_GATES">
            <find_gate name="$_Objects" space="$_Sector" multiple="true" append="true">
              <match knownto="$Ship.owner"/>
              <match accelerator="false"/>
              <match active="false"/>
            </find_gate>
          </do_if>
        </do_if>

        <do_if value="$ACCELERATORS">
          <do_if value="$ACTIVE_ACCELERATORS">
            <find_gate name="$_Objects" space="$_Sector" multiple="true" append="true">
              <match knownto="$Ship.owner"/>
              <match accelerator="true"/>
              <match active="true"/>
            </find_gate>
          </do_if>
          <do_if value="$INACTIVE_ACCELERATORS">
            <find_gate name="$_Objects" space="$_Sector" multiple="true" append="true">
              <match knownto="$Ship.owner"/>
              <match accelerator="true"/>
              <match active="false"/>
            </find_gate>
          </do_if>
        </do_if>

        <do_if value="$STATIONS">
          <create_list name="$_Stations"/>
          <find_station name="$_Stations" space="$_Sector" multiple="true">
            <match knownto="$Ship.owner"/>
          </find_station>
          <do_for_each name="$_Station" in="$_Stations">
            <do_if value="$_Station.mayattack.{$Ship} and not $ENEMY_STATIONS">
              <continue/>
            </do_if>
            <do_if value="$_Station.owner == faction.player and not $OWN_STATIONS">
              <continue/>
            </do_if>
            <do_if value="$_Station.owner != faction.player and not $_Station.owner.mayattack.{$Ship} and not $FRIENDLY_STATIONS">
              <continue/>
            </do_if>
            <do_if value="$_Station.iswharf and $WHARFS">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
            <do_if value="$_Station.isshipyard and $SHIPYARDS">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
            <do_if value="$_Station.isequipmentdock and $EQUIPMENTDOCKS">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
            <do_if value="$_Station.istradestation and $TRADE_STATIONS">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
            <do_if value="$_Station.ispiratebase and $PIRATE_BASE">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
            <do_if value="$_Station.isfactionheadquarters and $FACTION_HEADQUARTERS">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
            <do_if value="$_Station.isdefencestation and not $_Station.iswharf and not $_Station.isshipyard and not $_Station.isequipmentdock and not $_Station.istradestation and not $_Station.ispiratebase and not $_Station.isfactionheadquarters and $DEFENCE_STATIONS">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
            <do_if value="$_Station.iswharf == false and $_Station.isshipyard == false and $_Station.isequipmentdock == false and $_Station.istradestation == false and
                        $_Station.ispiratebase == false and $_Station.isfactionheadquarters == false and $_Station.isdefencestation == false and $NON_SPECIAL_STATIONS">
              <append_to_list name="$_Objects" exact="$_Station"/>
              <continue/>
            </do_if>
          </do_for_each>
          <remove_value name="$_Stations"/>
        </do_if>

        <create_list name="$_AlreadyMarked"/>
        <do_for_each name="$_Object" in="$_Objects">
          <find_object space="$_Object.sector" name="$Satellite">
            <match owner="$Ship.owner"/>
            <match macro="$SATELLITE_MACRO"/>
            <match_distance object="$_Object" max="$SATELLITE_MACRO.maxradarrange * 0.9"/>
          </find_object>
          <do_if value="@$Satellite != null">
            <append_to_list name="$_AlreadyMarked" exact="$_Object"/>
          </do_if>
        </do_for_each>
        <remove_from_list name="$_Objects" list="$_AlreadyMarked"/>
        <remove_value name="$_AlreadyMarked"/>

        <do_if value="$_Objects.count gt 0">
          <do_if value="$_Objects.count gt 1">
            <sort_list list="$_Objects" sortbyvalue="$Ship.distanceto.{loop.element}"/>
          </do_if>
          <set_value name="$NearestObjectToMark" exact="$_Objects.{1}"/>
          <remove_value name="$_Objects"/>
          <break/>
        </do_if>
        <remove_value name="$_Objects"/>

      </do_for_each>

      <label name="FINISH_LBL"/>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <do_if value="$DEBUG gt 0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_GetNearestObjectToMark.xml ~ Finished ~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
      </do_if>

      <label name="$CLEANUP_LBL"/>
      <remove_value name="$Ship"/>
      <remove_value name="$DebugFileName"/>
      <remove_value name="$DebugDirectory"/>

      <label name="END_LBL"/>
      <wait exact="1ms"/>

      <label name="RETURN_LBL"/>
      <return>
        <retval name="NEAREST_OBJECT_TO_MARK" value="$NearestObjectToMark"/>
      </return>

    </actions>
  </attention>

  <on_abort>
  </on_abort>

</aiscript>