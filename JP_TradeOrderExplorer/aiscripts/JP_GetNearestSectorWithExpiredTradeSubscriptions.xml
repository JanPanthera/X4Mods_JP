<?xml version="1.0" encoding="utf-8"?>

<aiscript name="JP_GetNearestSectorWithExpiredTradeSubscriptions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">

  <!-- Nearest sector (jump count) -->
  <order id ="JP_GetNearestSectorWithExpiredTradeSubscriptions" name="JP GetNearestSectorWithExpiredTradeSubscriptions" category="internal" infinite="false">
    <params>
      <param name="EXPLORER" text="Explorer" type="object" default="null" required="true"/>
      <!-- DEBUG -->
      <param name="DEBUG" text="DebugText" type="number" default="0.0" advanced="1">
        <input_param name="min" value="0.0"/>
        <input_param name="max" value="1.0"/>
        <input_param name="step" value="0.1"/>
      </param>
    </params>
  </order>

  <init>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="$DebugDirectory" exact="'JP_TradeOrderExplorer.logs'"/>
    <set_value name="$DebugFileName" exact="this.ship.idcode + '.JP_GetNearestSectorWithExpiredTradeSubscriptions.log'"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="$NearestSector" exact="null"/>
    <create_list name="$SectorsWithOutdatedTradesubscriptions"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  </init>

  <attention min="unknown">
    <actions>

      <wait exact="1ms"/>
      <label name="START"/>

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file append="false" directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_GetNearestSectorWithExpiredTradeSubscriptions.xml ~ Started ~~' + '\n'"/>
      </do_if>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <!-- Critical Error Checks ... -->

      <!-- Is given EXPLORER object a ship? -->
      <do_if value="@$EXPLORER.class" list="[class.ship, class.ship_xs, class.ship_s, class.ship_m, class.ship_l, class.ship_xl]" negate="true">
        <do_if value="$DEBUG ge 0.0">
          <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~ Given parameter $EXPLORER is not a ship?\n'"/>
        </do_if>
        <resume label="END"/>
      </do_if>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <!-- Populate the list $AvailableSectors with all available sectors from the galaxy who are known to $EXPLORER -->
      <create_list name="$AvailableSectors"/>
      <find_sector name="$AvailableSectors" space="player.galaxy" multiple="true">
        <match knownto="$EXPLORER.owner"/>
        <match mayattack="$EXPLORER" negate="true"/>
      </find_sector>

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'Found sectors we know and are not enemy with us: %1'.[$AvailableSectors.count]"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <do_if value="$DEBUG gt 0.5">
          <do_for_each name="$Sector" in="$AvailableSectors">
            <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~ Sector: [%1] ~~ Owner: [%2]'.[$Sector.knownname, $Sector.owner.knownname]"/>
          </do_for_each>
        </do_if>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <!-- Populate $SectorsWithOutdatedTradesubscriptions with Sectors with stations with outdated tradesubscriptions -->
      <do_for_each name="$Sector" in="$AvailableSectors">
        <find_station name="$Station" space="$Sector">
          <match checkoperational="true"/>
          <match mayattack="$EXPLORER" negate="true"/>
          <match tradesknownto="$EXPLORER.owner" negate="true"/>
        </find_station>
        <do_if value="@$Station != null">
          <append_to_list name="$SectorsWithOutdatedTradesubscriptions" exact="$Sector"/>
        </do_if>
      </do_for_each>
      <remove_value name="$AvailableSectors"/>

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'Sectors with stations where we need to update the trade subscription: %1'.[$SectorsWithOutdatedTradesubscriptions.count]"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <do_if value="$DEBUG gt 0.5">
          <do_for_each name="$Sector" in="$SectorsWithOutdatedTradesubscriptions">
            <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~ Sector: %1 [%2]'.[$Sector.knownname, $Sector.owner.knownname]"/>
          </do_for_each>
        </do_if>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>
      
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <!-- Remove all black listed sectors from $FoundSectors so each explorer gets a unique sectors -->
      <remove_from_list name="$SectorsWithOutdatedTradesubscriptions" list="global.$TradeOrderExplorerSectorBlackList"/>

      <!-- Sort the list $SectorsWithOutdatedTradesubscriptions by gate jump distance to the Explorer if needed and set the variable $NearestSector -->
      <do_if value="$SectorsWithOutdatedTradesubscriptions.count gt 0">
        <sort_list list="$SectorsWithOutdatedTradesubscriptions" sortbyvalue="$EXPLORER.gatedistance.{loop.element}"/>
        <do_for_each name="$Sector" in="$SectorsWithOutdatedTradesubscriptions">
          <do_if value="$EXPLORER.gatedistance.{$Sector} ge 0">
            <set_value name="$NearestSector" exact="$Sector"/>
            <break/>
          </do_if>
        </do_for_each>
      </do_if>
      <do_else>
        <resume label="END"/>
      </do_else>
      
      <do_if value="$DEBUG gt 0.0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'Nearest Sector is %1 [%2]'.[$NearestSector.knownname, $NearestSector.owner.knownname]"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>

      <label name="END"/>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_GetNearestSectorWithExpiredTradeSubscriptions.xml ~ Finished ~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>

      <label name="CLEANUP"/>
      <remove_value name="$SectorsWithOutdatedTradesubscriptions"/>
      <remove_value name="$DebugFileName"/>
      <remove_value name="$DebugDirectory"/>

      <label name="RETURN"/>
      <return>
        <retval name="NEAREST_SECTOR" value="$NearestSector"/>
      </return>

      <label name="FINISH"/>
      <wait exact="1ms"/>

    </actions>
  </attention>

</aiscript>