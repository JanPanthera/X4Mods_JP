<?xml version="1.0" encoding="utf-8"?>

<aiscript name="JP_CollectDroppedCargo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">

  <order id="JP_CollectDroppedCargo" name="CollectDroppedCargo JP" description="Collects dropped cargo and inventory items." category="navigation" infinite="true">
    <params>
      <param name="SECTOR" text="{20001, 201}" type="object" default="this.sector">
        <input_param name="class" value="[class.sector]"/>
      </param>
      <param name="COLLECT_CARGO" text="{8888888,1}" comment="Collect Cargo items?" type="bool" default="true"/>
      <param name="SELL_CARGO" text="{8888888,3}" comment="Sell cargo when full?" type="bool" default="true"/>
      <param name="COLLECT_INVENTORY" text="{8888888,2}" comment="Collect Inventory items?" type="bool" default="true"/>
      <param name="TO_PLAYER_INV" text="{8888888,6}" comment="Collect to Player inventory?" type="bool" default="false"/>
      <!-- Cheaty Version ~ collects without flying to the object ~ (/thereshallbewings) -->
      <param name="INSTANT" text="{8888888,5}" comment="Instant?" type="bool" default="false" advanced="true"/>
      <!-- DEBUG -->
      <param name="DEBUG" text="DebugText" type="number" default="0.0" advanced="1">
        <input_param name="min" value="0.0"/>
        <input_param name="max" value="1.0"/>
        <input_param name="step" value="0.1"/>
      </param>
    </params>
    <skill min="0"/>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
    </requires>
  </order>

  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="TargetInvalidHandler"/>
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler"/>
    <handler ref="JobRemoveRequestHandler" />
  </interrupts>

  <init>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="$DebugDirectory" exact="'JP_CollectDroppedCargo.logs'"/>
    <set_value name="$DebugFileName" exact="this.ship.idcode + '.JP_CollectDroppedCargo.xml.log'"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <set_value name="$Ship" exact="this.ship"/>
    <create_list name="$FoundDrops"/>
    <remove_value name="this.$GO_SELLING"/>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  </init>

  <attention min="unknown">
    <actions>

      <wait exact="1ms"/>
      <label name="INIT"/>
      <cancel_all_orders object="this.ship"/>

      <label name="RESUME"/>
      <wait exact="1s"/>

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file append="false" directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_CollectDroppedCargo.xml ~ Started ~~' + '\n'"/>
      </do_if>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <!-- If $SELL_CARGO is true we go sell all our wares in our cargo bay if its full -->
      <!-- The script JP_EmptyCargoBay needs the parameters for creating JP_CollectDroppedCargo order later again -->
      <do_if value="$SELL_CARGO and $Ship.cargo.free.container lt ($Ship.cargo.capacity.container * 0.2)">
        <create_order default="true" id="'JP_EmptyCargoBay'" object="$Ship">
          <param name="SECTOR" value="$SECTOR"/>
          <param name="COLLECT_CARGO" value="$COLLECT_CARGO"/>
          <param name="SELL_CARGO" value="$SELL_CARGO"/>
          <param name="COLLECT_INVENTORY" value="$COLLECT_INVENTORY"/>
          <param name="TO_PLAYER_INV" value="$TO_PLAYER_INV"/>
          <param name="INSTANT" value="$INSTANT"/>
          <param name="DEBUG" value="$DEBUG"/>
        </create_order>
      </do_if>

      <!-- Are we in the right sector? -->
      <do_if value="$Ship.sector != $SECTOR">
        <run_script name="'move.generic'">
          <param name="destination" value="$SECTOR" />
          <param name="endintargetzone" value="true"/>
          <param name="recallsubordinates" value="true"/>
        </run_script>
      </do_if>

      <!-- Searches for drops around $SECTOR and add them all to $Drops -->
      <find_object name="$Drops" space="$SECTOR" multiple="true">
        <match class="class.drop"/>
      </find_object>

      <!-- Fill $CollectableDrops with all Drops we found and we want to be collected -->
      <create_list name="$CollectableDrops"/>
      <do_for_each name="$Drop" in="$Drops">
        <do_if value="$COLLECT_INVENTORY and $Drop.wares.list.count gt 0 and $Drop.wares.list.{1}.isinventory">
          <append_to_list name="$CollectableDrops" exact="$Drop"/>
        </do_if>
        <do_if value="$COLLECT_CARGO and $Drop.wares.list.count gt 0 and $Drop.wares.list.{1}.iscargo">
          <append_to_list name="$CollectableDrops" exact="$Drop"/>
        </do_if>
      </do_for_each>
      <remove_value name="$Drops"/>

      <!-- Sort all drops in $CollectableDrops by distance to the ship -->
      <do_if value="$CollectableDrops.count le 0">
        <resume label="WAIT_IDLE"/>
      </do_if>

      <do_if value="$CollectableDrops.count gt 1">
        <sort_list list="$CollectableDrops" sortbyvalue="$Ship.distanceto.{loop.element}"/>
      </do_if>

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'"/>
        <do_for_each name="$CollectableDrop" in="$CollectableDrops">
          <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~ ' + $CollectableDrop.name + ' ~~ ' + $CollectableDrop.wares.{1}.name + ' ~~ ' + $CollectableDrop.wares.{$CollectableDrop.wares.{1}}.count"/>
        </do_for_each>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>

      <!-- Check the nearest Drop if its still here -->
      <do_if value="$CollectableDrops.{1}.iswreck or not $CollectableDrops.{1}.isoperational or not $CollectableDrops.{1}.exists">
        <resume label="RESUME"/>
      </do_if>

      <!-- Moving to the object -->
      <label name="MOVING"/>
      <do_if value="not $INSTANT">
        <set_command command="command.move" param="$CollectableDrops.{1}"/>
        <get_safe_pos result="$TempPosition" zone="$SECTOR" object="$CollectableDrops.{1}" directionobject="$Ship" radius="$Ship.size" ignored="$Ship"/>
        <move_to object="$Ship" destination="$SECTOR" finishonapproach="false" forceposition="true" travel="true">
          <position value="$TempPosition"/>
          <interrupt_after_time time="2s"/>
        </move_to>
        <do_if value="$Ship.distanceto.{$CollectableDrops.{1}} gt 200m">
          <resume label="MOVING"/>
        </do_if>
        <remove_value name="$TempPosition"/>
        <stop_moving object="$Ship"/>
      </do_if>

      <!-- Check the Drop if its still here -->
      <do_if value="$CollectableDrops.{1}.iswreck or not $CollectableDrops.{1}.isoperational or not $CollectableDrops.{1}.exists">
        <resume label="RESUME"/>
      </do_if>

      <!-- Collecting it -->
      <do_if value="$CollectableDrops.{1}.wares.list.{1}.isinventory and $TO_PLAYER_INV">
        <add_inventory entity="player.entity" ware="$CollectableDrops.{1}.wares.list.last" exact="$CollectableDrops.{1}.wares.{$CollectableDrops.{1}.wares.list.last}.count"/>
        <wait exact="1ms"/>
        <destroy_object object="$CollectableDrops.{1}" explosion="false"/>
      </do_if>
      <do_if value="$CollectableDrops.{1}.wares.list.{1}.iscargo">
        <collect_drop object="$Ship" drop="$CollectableDrops.{1}"/>
      </do_if>
      <!-- Make sure the game removes the collected drop internal from the galaxy before we continue -->
      <remove_value name="$CollectableDrops"/>
      <wait exact="1s"/>
      <resume label="RESUME"/>

      <!-- Idle a bit before continue to search for new drops -->
      <label name="WAIT_IDLE"/>
      <set_command command="command.wait"/>
      <set_value name="$Timeout" min="15s" max="30s"/>
      <run_script name="'move.idle'">
        <param name="TimeOut" value="$Timeout"/>
      </run_script>
      <remove_value name="$Timeout"/>
      <resume label="RESUME"/>

      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

      <do_if value="$DEBUG gt 0.0">
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'[' + player.systemtime.{'%F - %X'} + '] ' + '~~ JP_CollectDroppedCargo.xml ~ Finished ~~'"/>
        <debug_to_file directory="$DebugDirectory" name="$DebugFileName" text="'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'"/>
      </do_if>

      <label name="$CLEANUP"/>
      <do_if value="$SELL_CARGO">
        <remove_value name="this.$GO_SELLING"/>
      </do_if>
      <remove_value name="$FoundDrops"/>
      <remove_value name="$Ship"/>
      <remove_value name="$DebugFileName"/>
      <remove_value name="$DebugDirectory"/>

      <label name="FINISH"/>
      <set_order_syncpoint_reached order="this.ship.order"/>
      <cancel_order order="this.ship.order" />
      <wait exact="1ms"/>

    </actions>
  </attention>

  <on_abort>
  </on_abort>

</aiscript>